{"path":".obsidian/plugins/text-extractor/cache/7ac0bd1a32e0111fe84493e541de4376.json","text":"void bubblesort (int[] feld) { // es werden maximal feld.length - 1 Durchläufe benötigt for (int i = 0; i < feld.length - 1; i++) { // solange keine Vertauschungen vorgenommen werden // ist das Feld sortiert boolean sorted = true; // Durchlaufe das Feld, in jedem Durchlauf muss // ein Element weniger berücksichtigt werden for (int j = 0; j < feld.length - 1 - i; j++) { if (feld[j] > feld[3 + 1]) { // wenn linkes größer // dann vertausche int temp = feld[j]; feld[j] = feld[j + 1]1; feld[] + 1] = temp; // Feld ist nicht sortiert sorted = false; } } if (sorted) { // keine Vertauschungen, Feld ist // £folglich vollständig sortiert break; } } }","libVersion":"0.2.1","langs":"deu+eng"}